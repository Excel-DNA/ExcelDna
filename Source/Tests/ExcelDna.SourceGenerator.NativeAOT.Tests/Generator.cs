namespace ExcelDna.SourceGenerator.NativeAOT.Tests
{
    public class Generator
    {
        [Fact]
        public void Empty()
        {
            SourceGeneratorDriver.Verify("", """
        // <auto-generated/>
        using System;
        using System.Collections.Generic;
        using System.Runtime.CompilerServices;
        using System.Runtime.InteropServices;
        
        namespace ExcelDna.SourceGenerator.NativeAOT
        {
            public unsafe class AddInInitialize
            {
                [UnmanagedCallersOnly(EntryPoint = "Initialize", CallConvs = new[] { typeof(CallConvCdecl) })]
                public static short Initialize(void* xlAddInExportInfoAddress, void* hModuleXll, void* pPathXLL, byte disableAssemblyContextUnload, void* pTempDirPath)
                {
                    ExcelDna.Integration.NativeAOT.IsActive = true;
        
                    
        
                    List<Type> functionTypes = new List<Type>();
        
        
                    return ExcelDna.ManagedHost.AddInInitialize.InitializeNativeAOT(xlAddInExportInfoAddress, hModuleXll, pPathXLL, disableAssemblyContextUnload, pTempDirPath);
                }
            }
        }
        """);
        }
    }
}
